# Use old trusty image since new one breaks our builds
# See: https://blog.travis-ci.com/2017-12-12-new-trusty-images-q4-launch
group: deprecated-2017Q4

os:
  - linux
  - osx


# Supported osx/xcode versions: https://docs.travis-ci.com/user/languages/objective-c/#Supported-Xcode-versions
# See also: https://blog.travis-ci.com/2016-10-04-osx-73-default-image-live/
osx_image: xcode9.4

#cache:
#  directories:
#    # Disabled homebrew cache, did not appear to do anything
#    #- $HOME/Library/Caches/Homebrew
#    - $HOME/nvidia_cache
#  # https://docs.travis-ci.com/user/caching/#Setting-the-timeout
#  timeout: 540  # seconds: 9 min cache upload time (default is 3 min)

language: c
sudo: required

services:
  - docker

env:
  global:
    secure:
      - "ZqmnDgcGJTbq+2osztgAN57w6YNg851abtGtkiV0KBOubmPhESTT4he+NfWODt6NzdDysAJ4tFNUCHMoD/xZ+y26r3pBIqltaIHeKR9OGRSHfYjXTXLhO0gjtZEkc7A+ZicxyeKFtjOf/3BW50HzC3SvnpviCy4MSN/y8H8WCW6pBw1GDUArwQAKaIT04p7Y2tqIjKjcFANhhhSLtDK36DQaCI+vDLCbF9e80vA69izKKym0ZNDn4CNB0ngy8SVlxLpbHicH+5vH2SvDOiyUBdYj7RSOx84JxKWl20mbCos/v4kzASc7EAbaJURs5Swj/wOXbgzeKHQyrCa9yai2NgxFrpQvi5ZGnrbzbIjDB20iszGLMTzp3A0T5rau5AUaPHxvAJ0BE77clQoDZ67v1lD71O9Abc3NIOGVZhOMN3vDwacyo/WgTtA0UahVs2k/WY++rKbLS22XzIz4FjraUf2A/97FW0fKe45DoNrS95Y0GnEbKtGZbj6ycK9URK9RQL92IuR8LJ33yQoeuNTNZ2SlcpDgdvwtEhuPGTm6gUtQRKaUD856ZKtjKwOJ6tSjADfAT5ticBOQvx2A11qyaQAsyz/gu1wT3ZWmpwpn5E16xjFPM1n3wSLTDAq9XGC0BIcHgLmYZrfumMQ8Niy3FuoC9HiK/e5X5+wqOwlAV7E="
  jobs:
    - CUDA_VERSION="7.5" CUDA_SHORT_VERSION="75"
    - CUDA_VERSION="8.0" CUDA_SHORT_VERSION="80"
    - CUDA_VERSION="9.0" CUDA_SHORT_VERSION="90"
    - CUDA_VERSION="9.1" CUDA_SHORT_VERSION="91"
    - CUDA_VERSION="9.2" CUDA_SHORT_VERSION="92"
    - CUDA_VERSION="10.0" CUDA_SHORT_VERSION="100"
    - CUDA_VERSION="10.1" CUDA_SHORT_VERSION="101"

install:
  - export DOCKER_IMAGE="jchodera/omnia-linux-anvil:texlive18-cuda${CUDA_SHORT_VERSION}"
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      docker pull ${DOCKER_IMAGE};
    fi

script:
  # Retrieve conda-build-all
  # DEBUG: Temporarily commented out to test
  #- wget -O conda-build-all --quiet https://raw.githubusercontent.com/omnia-md/conda-recipes/master/conda-build-all
  - chmod +x conda-build-all
  # Select upload destination
  - export CHECK_AGAINST="--check-against omnia --check-against omnia-dev --check-against omnia-dev/label/cuda${CUDA_SHORT_VERSION}"
  - export CHECK_AGAINST="$CHECK_AGAINST --check-against omnia-dev/label/beta --check-against omnia-dev/label/betacuda${CUDA_SHORT_VERSION}"
  - export CHECK_AGAISNT="$CHECK_AGAINST --check-against omnia-dev/label/dev --check-against omnia-dev/label/devcuda${CUDA_SHORT_VERSION}"
  - if [[ "${TRAVIS_PULL_REQUEST}" == "false" && "${TRAVIS_BRANCH}" == "master" ]]; then
        export UPLOAD="$CHECK_AGAINST --upload omnia-dev";
    else
        export UPLOAD="$CHECK_AGAINST";
    fi
  - echo $UPLOAD
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then

        docker run -e UPLOAD -e BINSTAR_TOKEN -e CUDA_VERSION -e CUDA_SHORT_VERSION -e TRAVIS_PULL_REQUEST
            -t -i --rm -v `pwd`:/io ${DOCKER_IMAGE}
            bash /io/devtools/docker-build.sh;

    elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then

        echo "Building osx...";
        export NVIDIA_CACHE=$HOME/nvidia_cache;
        bash devtools/osx-build.sh;

    fi
